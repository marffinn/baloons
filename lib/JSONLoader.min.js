THREE.JSONLoader=function(e){"boolean"==typeof e&&(console.warn("THREE.JSONLoader: showStatus parameter has been removed from constructor."),e=void 0),this.manager=void 0!==e?e:THREE.DefaultLoadingManager,this.withCredentials=!1},Object.assign(THREE.JSONLoader.prototype,{load:function(e,r,o,s){var t=this,n=this.texturePath&&"string"==typeof this.texturePath?this.texturePath:THREE.LoaderUtils.extractUrlBase(e),a=new THREE.FileLoader(this.manager);a.setWithCredentials(this.withCredentials),a.load(e,function(o){var s=JSON.parse(o),a=s.metadata;if(void 0!==a){var i=a.type;if(void 0!==i){if("object"===i.toLowerCase())return void console.error("THREE.JSONLoader: "+e+" should be loaded with THREE.ObjectLoader instead.");if("scene"===i.toLowerCase())return void console.error("THREE.JSONLoader: "+e+" should be loaded with THREE.SceneLoader instead.")}}var h=t.parse(s,n);r(h.geometry,h.materials)},o,s)},setTexturePath:function(e){this.texturePath=e},parse:function(e,r){var o=new THREE.Geometry,s=void 0!==e.scale?1/e.scale:1;if(function(r){function s(e,r){return e&1<<r}var t,n,a,i,h,c,l,f,v,m,d,g,u,E,p,T,H,x,R,w,k,C,V,b,I,L,y,W=e.faces,N=e.vertices,S=e.normals,O=e.colors,U=0;if(void 0!==e.uvs){for(t=0;t<e.uvs.length;t++)e.uvs[t].length&&U++;for(t=0;t<U;t++)o.faceVertexUvs[t]=[]}i=0,h=N.length;for(;i<h;)(x=new THREE.Vector3).x=N[i++]*r,x.y=N[i++]*r,x.z=N[i++]*r,o.vertices.push(x);i=0,h=W.length;for(;i<h;)if(m=W[i++],d=s(m,0),g=s(m,1),u=s(m,3),E=s(m,4),p=s(m,5),T=s(m,6),H=s(m,7),d){if((w=new THREE.Face3).a=W[i],w.b=W[i+1],w.c=W[i+3],(k=new THREE.Face3).a=W[i+1],k.b=W[i+2],k.c=W[i+3],i+=4,g&&(v=W[i++],w.materialIndex=v,k.materialIndex=v),a=o.faces.length,u)for(t=0;t<U;t++)for(b=e.uvs[t],o.faceVertexUvs[t][a]=[],o.faceVertexUvs[t][a+1]=[],n=0;n<4;n++)f=W[i++],L=b[2*f],y=b[2*f+1],I=new THREE.Vector2(L,y),2!==n&&o.faceVertexUvs[t][a].push(I),0!==n&&o.faceVertexUvs[t][a+1].push(I);if(E&&(l=3*W[i++],w.normal.set(S[l++],S[l++],S[l]),k.normal.copy(w.normal)),p)for(t=0;t<4;t++)l=3*W[i++],V=new THREE.Vector3(S[l++],S[l++],S[l]),2!==t&&w.vertexNormals.push(V),0!==t&&k.vertexNormals.push(V);if(T&&(c=W[i++],C=O[c],w.color.setHex(C),k.color.setHex(C)),H)for(t=0;t<4;t++)c=W[i++],C=O[c],2!==t&&w.vertexColors.push(new THREE.Color(C)),0!==t&&k.vertexColors.push(new THREE.Color(C));o.faces.push(w),o.faces.push(k)}else{if((R=new THREE.Face3).a=W[i++],R.b=W[i++],R.c=W[i++],g&&(v=W[i++],R.materialIndex=v),a=o.faces.length,u)for(t=0;t<U;t++)for(b=e.uvs[t],o.faceVertexUvs[t][a]=[],n=0;n<3;n++)f=W[i++],L=b[2*f],y=b[2*f+1],I=new THREE.Vector2(L,y),o.faceVertexUvs[t][a].push(I);if(E&&(l=3*W[i++],R.normal.set(S[l++],S[l++],S[l])),p)for(t=0;t<3;t++)l=3*W[i++],V=new THREE.Vector3(S[l++],S[l++],S[l]),R.vertexNormals.push(V);if(T&&(c=W[i++],R.color.setHex(O[c])),H)for(t=0;t<3;t++)c=W[i++],R.vertexColors.push(new THREE.Color(O[c]));o.faces.push(R)}}(s),function(){var r=void 0!==e.influencesPerVertex?e.influencesPerVertex:2;if(e.skinWeights)for(var s=0,t=e.skinWeights.length;s<t;s+=r){var n=e.skinWeights[s],a=r>1?e.skinWeights[s+1]:0,i=r>2?e.skinWeights[s+2]:0,h=r>3?e.skinWeights[s+3]:0;o.skinWeights.push(new THREE.Vector4(n,a,i,h))}if(e.skinIndices)for(var s=0,t=e.skinIndices.length;s<t;s+=r){var c=e.skinIndices[s],l=r>1?e.skinIndices[s+1]:0,f=r>2?e.skinIndices[s+2]:0,v=r>3?e.skinIndices[s+3]:0;o.skinIndices.push(new THREE.Vector4(c,l,f,v))}o.bones=e.bones,o.bones&&o.bones.length>0&&(o.skinWeights.length!==o.skinIndices.length||o.skinIndices.length!==o.vertices.length)&&console.warn("When skinning, number of vertices ("+o.vertices.length+"), skinIndices ("+o.skinIndices.length+"), and skinWeights ("+o.skinWeights.length+") should match.")}(),function(r){if(void 0!==e.morphTargets)for(var s=0,t=e.morphTargets.length;s<t;s++){o.morphTargets[s]={},o.morphTargets[s].name=e.morphTargets[s].name,o.morphTargets[s].vertices=[];for(var n=o.morphTargets[s].vertices,a=e.morphTargets[s].vertices,i=0,h=a.length;i<h;i+=3){var c=new THREE.Vector3;c.x=a[i]*r,c.y=a[i+1]*r,c.z=a[i+2]*r,n.push(c)}}if(void 0!==e.morphColors&&e.morphColors.length>0){console.warn('THREE.JSONLoader: "morphColors" no longer supported. Using them as face colors.');for(var l=o.faces,f=e.morphColors[0].colors,s=0,t=l.length;s<t;s++)l[s].color.fromArray(f,3*s)}}(s),function(){var r=[],s=[];void 0!==e.animation&&s.push(e.animation);void 0!==e.animations&&(e.animations.length?s=s.concat(e.animations):s.push(e.animations));for(var t=0;t<s.length;t++){var n=THREE.AnimationClip.parseAnimation(s[t],o.bones);n&&r.push(n)}if(o.morphTargets){var a=THREE.AnimationClip.CreateClipsFromMorphTargetSequences(o.morphTargets,10);r=r.concat(a)}r.length>0&&(o.animations=r)}(),o.computeFaceNormals(),o.computeBoundingSphere(),void 0===e.materials||0===e.materials.length)return{geometry:o};var t=THREE.Loader.prototype.initMaterials(e.materials,r,this.crossOrigin);return{geometry:o,materials:t}}});